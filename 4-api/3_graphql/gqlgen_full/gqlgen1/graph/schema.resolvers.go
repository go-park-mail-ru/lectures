package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.38

import (
	"context"
	"fmt"

	"github.com/go-park-mail-ru/lectures/4-api/3_graphql/gqlgen_full/gqlgen1/graph/model"
)

// RatePhoto is the resolver for the ratePhoto field.
func (r *mutationResolver) RatePhoto(ctx context.Context, photoID string, direction string) (*model.Photo, error) {
	panic(fmt.Errorf("not implemented: RatePhoto - ratePhoto"))
}

// Timeline is the resolver for the timeline field.
func (r *queryResolver) Timeline(ctx context.Context) ([]*model.Photo, error) {
	panic(fmt.Errorf("not implemented: Timeline - timeline"))
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, userID string) (*model.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// Photos is the resolver for the photos field.
func (r *queryResolver) Photos(ctx context.Context, userID string) ([]*model.Photo, error) {
	panic(fmt.Errorf("not implemented: Photos - photos"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
